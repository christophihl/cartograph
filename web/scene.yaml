scene:
    background:
        color: '#F0F7FF'
sources:
#    fixed:
#        type: TopoJSON
#        url: http://localhost:4000/fixed/10.topojson
#        max_zoom: 16
    tiled:
        type: TopoJSON
        url: http://localhost:4000/tile/{z}/{x}/{y}.topojson
        max_zoom: 16
    gender:
        type: TopoJSON
        url: http://localhost:4000/metric/gender/{z}/{x}/{y}.topojson
        max_zoom: 16
    genderPoints:
        type: TopoJSON
        url: http://localhost:4000/metricPoints/gender.topojson

import: http://localhost:4000/countries.yaml

styles:
    point-alpha:
        base: points
        blend: overlay
    poly-alpha:
        base: polygons
        blend: overlay
    line-alpha:
        base: lines
        blend: inlay

layers:
    countries:
        data: { source: tiled, layer: countries }
        draw:
            lines:
                color: gray
                width: 1px
                visible: true
                order: 2
                blend: overlay
                collide: false

    capitals:
        data: { source: tiled, layer: countries_labels }
        draw:
          points:
            color: '#dd9999'
            size: 0px
            collide: false
            text:
              text_source: name
              anchor: center
              collide: false
              font:
                  family: Arial
                  size: 16px
                  weight: 700
                  transform: uppercase
                  fill: 'rgba(255, 255, 255, 0.5)'
                  stroke: { color: '#666', width: 1px }
    cities:
        data: { source: tiled, layer: cities }
        small_cities:
            filter: { zoomOffset : 0 }
            draw:
                points:
                  interactive: true
                  collide: false
                  color: 'rgba(221,153,153,0.5)'
                  size: 4px
                  priority: function() { return 1000000 - feature.pop; }
        medium_cities:
            filter: { zoomOffset : 1 }
            draw:
                points:
                  order: 1000
                  interactive: true
                  color: '#dd9999'
                  size: 5px
                  priority: function() { return 100000 - feature.pop ; }
                  text:
                    order: 1000
                    text_source: city
                    interactive: true
                    priority: function() { return 100000 - feature.pop ; }
                    font:
                        family: Arial
                        size: 11px
                        fill: '#666'
                        stroke: { color: '#fff', width: 2 }
        large_cities:
            filter: { zoomOffset : { min: 3, max: 4 } }
            draw:
                points:
                  order: 1000
                  interactive: true
                  color: '#dd9999'
                  size: 7px
                  priority: function() { return 10000 - feature.pop; }
                  text:
                    order: 1000
                    text_source: city
                    interactive: true
                    priority: function() { return 10000 - feature.pop; }
#                    priority: function() { return 10000 - feature.pop; }
                    font:
                        family: Arial
                        size: 13px
                        fill: '#666'
                        stroke: { color: '#fff', width: 2 }
        huge_cities:
            filter: { zoomOffset : { min: 5 } }
            draw:
                points:
                  order: 1000
                  interactive: true
                  color: '#dd9999'
                  size: 14px
                  priority: function() { return 5000 - feature.pop; }
                  text:
                    order: 1000
                    text_source: city
                    interactive: true
                    priority: function() { return 5000 - feature.pop; }
                    font:
                        family: Arial
                        size: 15px
                        fill: '#666'
                        stroke: { color: '#fff', width: 2 }

    gender:
        data: { source: genderPoints, layer: gender }
        all_points:
            draw:
                points:
                  collide: false
                  style: point-alpha
                  color: |
                    function () {
                        var p = (feature.women + 2.0) / (feature.women + feature.men + 4.0);
                        var alpha = Math.abs(p - 0.5) / 2;
                        if (p > 0.5) {
                          return [1, 0, 0, alpha];
                        } else {
                          return [0, 0, 1, alpha];
                        }
                    }
                  size: 6px

#        data: { source: gender, layer: gender }
#        draw:
#            polygons:
#                style: poly-alpha
#                color: |
#                  function () {
#                      var p = feature.normwomen;
#                      var alpha = Math.abs(p - 0.5) / 4;
#                      if (p > 0.5) {
#                        return [1, 0, 0, alpha];
#                      } else {
#                        return [0, 0, 1, alpha];
#                      }
#                  }

    edges:
        data: { source: tiled, layer: edges }
        draw:
            lines:
                collide: false
                style: line-alpha
                color: 'rgba(150,120,120,0.2)'
                width: 1px
                visible: true
                order: 0
